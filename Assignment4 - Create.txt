CREATE TABLE Manufacturer
(
  Manufacturer_ID NUMBER NOT NULL,
  Manufacturer_Name VARCHAR2(50) NOT NULL,
  Street_Address VARCHAR2(50) NOT NULL,
  City VARCHAR2(30) NOT NULL,
  State VARCHAR2(2) NOT NULL,
  Zip_Code NUMBER(5) NOT NULL,
  CONSTRAINT MANUFACTURER_PK PRIMARY KEY (Manufacturer_ID)
);

CREATE SEQUENCE MANUFACTURER_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_MANUFACTURER_SEQ
BEFORE INSERT ON Manufacturer
FOR EACH ROW
DECLARE
new_mf_id number;
BEGIN
SELECT MANUFACTURER_SEQ.nextval INTO new_mf_id FROM dual;
:new.Manufacturer_ID := new_mf_id;
END;
/

CREATE TABLE Truck_Model
(
  Model_ID NUMBER NOT NULL,
  Model_No VARCHAR2(10) NOT NULL,
  Model_Name VARCHAR2(30) NOT NULL,
  Description VARCHAR2(100) NOT NULL,
  Manufacturer_ID INT NOT NULL,
  CONSTRAINT MODEL_PK PRIMARY KEY (Model_ID),
  CONSTRAINT MANUFACTURER_MODEL_FK FOREIGN KEY (Manufacturer_ID) REFERENCES Manufacturer(Manufacturer_ID)
);

CREATE SEQUENCE MODEL_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_MODEL_SEQ
BEFORE INSERT ON Truck_Model
FOR EACH ROW
DECLARE
new_model_id number;
BEGIN
SELECT MODEL_SEQ.nextval INTO new_model_id FROM dual;
:new.Model_ID := new_model_id;
END;
/

CREATE TABLE Truck_Inventory
(
  Inventory_ID NUMBER NOT NULL,
  Initial_Mileage NUMBER(6) NOT NULL,
  Vin_No VARCHAR2(17) NOT NULL,
  Date_Purchased DATE NOT NULL,
  Date_Entered_Into_Service DATE,
  In_Repair DATE,
  Current_Mileage NUMBER(6) NOT NULL,
  Model_ID INT  NOT NULL,
  CONSTRAINT INVENTORY_PK PRIMARY KEY (Inventory_ID),
  CONSTRAINT INVENTORY_MODEL_FK FOREIGN KEY (Model_ID) REFERENCES Truck_Model(Model_ID)
);

CREATE SEQUENCE INVENTORY_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_INVENTORY_SEQ
BEFORE INSERT ON Truck_Inventory
FOR EACH ROW
DECLARE
new_inventory_id number;
BEGIN
SELECT INVENTORY_SEQ.nextval INTO new_inventory_id FROM dual;
:new.Inventory_ID := new_inventory_id;
END;
/

CREATE OR REPLACE TRIGGER INSERT_INVENTORY_Date
BEFORE INSERT ON Truck_Inventory
FOR EACH ROW
BEGIN
:NEW.Date_Purchased := SYSDATE;
END;
/

CREATE TABLE Driver
(
  Driver_ID NUMBER NOT NULL,
  Last_Name VARCHAR2(30) NOT NULL,
  First_Name VARCHAR2(20) NOT NULL,
  Rec_Create_Date DATE NOT NULL,
  Rec_Update_Date DATE,
  CONSTRAINT DRIVER_PK PRIMARY KEY (Driver_ID)
);

CREATE SEQUENCE DRIVER_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_DRIVER_SEQ
BEFORE INSERT ON Driver
FOR EACH ROW
DECLARE
new_driver_id number;
BEGIN
SELECT DRIVER_SEQ.nextval INTO new_driver_id FROM dual;
:new.Driver_ID := new_driver_id;
END;
/

CREATE OR REPLACE TRIGGER INSERT_DRIVER_Date
BEFORE INSERT ON Driver
FOR EACH ROW
BEGIN
:NEW.Rec_Create_Date := SYSDATE;
END;
/

CREATE OR REPLACE TRIGGER UPDATE_DRIVER_Date
BEFORE UPDATE ON Driver
FOR EACH ROW
BEGIN
:NEW.Rec_Update_Date := SYSDATE;
END;
/

CREATE TABLE Scheduled_Service
(
  Service_ID NUMBER NOT NULL,
  Service_Code VARCHAR2(10) NOT NULL,
  Service_Description VARCHAR2(100) NOT NULL,
  Mileage_Cycle NUMBER NOT NULL,
  Model_ID NUMBER NOT NULL,
  CONSTRAINT SCHEDULED_PK PRIMARY KEY (Service_ID),
  CONSTRAINT SCHEDULED_MODEL_FK FOREIGN KEY (Model_ID) REFERENCES Truck_Model(Model_ID)
);

CREATE SEQUENCE SCHEDULED_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_SCHEDULED_SEQ
BEFORE INSERT ON Scheduled_Service
FOR EACH ROW
DECLARE
new_scheduled_id number;
BEGIN
SELECT SCHEDULED_SEQ.nextval INTO new_scheduled_id FROM dual;
:new.Service_ID := new_scheduled_id;
END;
/

CREATE TABLE Repair_Shop
(
  Repair_Shop_ID NUMBER NOT NULL,
  Name VARCHAR2(50) NOT NULL,
  Street_Address VARCHAR2(100) NOT NULL,
  City VARCHAR2(50) NOT NULL,
  State VARCHAR2(2) NOT NULL,
  Zip_Code NUMBER(5) NOT NULL,
  CONSTRAINT RS_PK PRIMARY KEY (Repair_Shop_ID)
);

CREATE SEQUENCE SHOP_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_SHOP_SEQ
BEFORE INSERT ON Repair_Shop
FOR EACH ROW
DECLARE
new_rs_id number;
BEGIN
SELECT SHOP_SEQ.nextval INTO new_rs_id FROM dual;
:new.Repair_Shop_ID := new_rs_id;
END;
/

CREATE TABLE Detail
(
  Detail_ID NUMBER NOT NULL,
  Detail_Description VARCHAR2(200) NOT NULL,
  CONSTRAINT DETAIL_PK PRIMARY KEY (Detail_ID)
);

CREATE SEQUENCE DETAIL_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_DETAIL_SEQ
BEFORE INSERT ON Detail
FOR EACH ROW
DECLARE
new_detail_id number;
BEGIN
SELECT DETAIL_SEQ.nextval INTO new_detail_id FROM dual;
:new.Detail_ID := new_detail_id;
END;
/

CREATE TABLE Service_Detail
(
  Service_ID NUMBER NOT NULL,
  Detail_ID NUMBER NOT NULL,
  CONSTRAINT SD_PK PRIMARY KEY (Service_ID, Detail_ID),
  CONSTRAINT SD_SCHEDULED_FK FOREIGN KEY (Service_ID) REFERENCES Scheduled_Service(Service_ID),
  CONSTRAINT SD_DETAIL_FK FOREIGN KEY (Detail_ID) REFERENCES Detail(Detail_ID)
);

CREATE SEQUENCE SD_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_SD_SEQ
BEFORE INSERT ON Service_Detail
FOR EACH ROW
DECLARE
new_sd_id number;
BEGIN
SELECT SD_SEQ.nextval INTO new_sd_id FROM dual;
:new.Service_ID := new_sd_id;
END;
/

CREATE TABLE Trip
(
  Trip_ID NUMBER NOT NULL,
  Start_City VARCHAR2(50) NOT NULL,
  End_City VARCHAR2(50) NOT NULL,
  Date_Time_Started DATE NOT NULL,
  Date_Time_Ended DATE NOT NULL,
  Inventory_ID NUMBER NOT NULL,
  Driver_ID NUMBER NOT NULL,
  CONSTRAINT TRIP_PK PRIMARY KEY (Trip_ID),
  CONSTRAINT TRIP_INVENTORY_FK FOREIGN KEY (Inventory_ID) REFERENCES Truck_Inventory(Inventory_ID),
  CONSTRAINT TRIP_DRIVER_FK FOREIGN KEY (Driver_ID) REFERENCES Driver(Driver_ID)
);

CREATE SEQUENCE TRIP_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_TRIP_SEQ
BEFORE INSERT ON Trip
FOR EACH ROW
DECLARE
new_trip_id number;
BEGIN
SELECT TRIP_SEQ.nextval INTO new_trip_id FROM dual;
:new.Trip_ID := new_trip_id;
END;
/

CREATE OR REPLACE TRIGGER INSERT_TRIP_Date
BEFORE INSERT ON Trip
FOR EACH ROW
BEGIN
:NEW.Date_Time_Started := SYSDATE;
END;
/

CREATE TABLE Truck_Service_History
(
  Truck_Service_ID NUMBER NOT NULL,
  Suggested_Service BOOL NOT NULL,
  Description VARCHAR2(100) NOT NULL,
  Mileage NUMBER NOT NULL,
  Service_Cost NUMBER NOT NULL,
  Service_Date DATE NOT NULL,
  Service_ID NUMBER,
  Inventory_ID NUMBER NOT NULL,
  Repair_Shop_ID NUMBER NOT NULL,
  Driver_ID INT NUMBER NULL,
  CONSTRAINT SH_PK PRIMARY KEY (Truck_Service_ID),
  CONSTRAINT SH_SCHEDULED_FK FOREIGN KEY (Service_ID) REFERENCES Scheduled_Service(Service_ID),
  CONSTRAINT SH_INVENTORY_FK FOREIGN KEY (Inventory_ID) REFERENCES Truck_Inventory(Inventory_ID),
  CONSTRAINT SH_SHOP_FK FOREIGN KEY (Repair_Shop_ID) REFERENCES Repair_Shop(Repair_Shop_ID),
  CONSTRAINT SH_DRIVER_FK FOREIGN KEY (Driver_ID) REFERENCES Driver(Driver_ID)
);

CREATE SEQUENCE SH_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_SH_SEQ
BEFORE INSERT ON Truck_Service_History
FOR EACH ROW
DECLARE
new_sh_id number;
BEGIN
SELECT SH_SEQ.nextval INTO new_sh_id FROM dual;
:new.Truck_Service_ID := new_sh_id;
END;
/

CREATE OR REPLACE TRIGGER INSERT_SERVICE_Date
BEFORE INSERT ON Truck_Service_History
FOR EACH ROW
BEGIN
:NEW.Service_Date := SYSDATE;
END;
/

CREATE TABLE Mechanic
(
  Mechanic_ID NUMBER NOT NULL,
  First_Name VARCHAR2(20) NOT NULL,
  Last_Name VARCHAR2(20) NOT NULL,
  Repair_Shop_ID NUMBER NOT NULL,
  CONSTRAINT MECHANIC_PK PRIMARY KEY (Mechanic_ID),
  CONSTRAINT MECHANIC_SHOP_FK FOREIGN KEY (Repair_Shop_ID) REFERENCES Repair_Shop(Repair_Shop_ID)
);

CREATE SEQUENCE MECHANIC_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_MECHANIC_SEQ
BEFORE INSERT ON Mechanic
FOR EACH ROW
DECLARE
new_mechanic_id number;
BEGIN
SELECT MECHANIC_SEQ.nextval INTO new_mechanic_id FROM dual;
:new.Mechanic_ID := new_mechanic_id;
END;
/

CREATE TABLE Part_Used
(
  Part_Used_ID NUMBER NOT NULL,
  Part_No NUMBER NOT NULL,
  Part_Description VARCHAR2(100) NOT NULL,
  Quantity_Used NUMBER NOT NULL,
  Unit_Price NUMBER NOT NULL,
  Truck_Service_ID NUMBER NOT NULL,
  CONSTRAINT PART_PK PRIMARY KEY (Part_Used_ID),
  CONSTRAINT PART_SERVICE_FK FOREIGN KEY (Truck_Service_ID) REFERENCES Truck_Service_History(Truck_Service_ID)
);

CREATE SEQUENCE PART_SEQ INCREMENT BY 1 START WITH 1 NOCACHE;
CREATE OR REPLACE TRIGGER INSERT_PART_SEQ
BEFORE INSERT ON Part_Used
FOR EACH ROW
DECLARE
new_part_id number;
BEGIN
SELECT PART_SEQ.nextval INTO new_part_id FROM dual;
:new.Part_Used_ID := new_part_id;
END;
/